A sample dataset for running the LSST DM stack
==============================================

Maintainer: Mario Juric <mjuric@lsst.org>

Overview
--------

This package contains the input files and astrometric reference catalogs
needed to process several SDSS frames, using the processCcdSdss.py script
from the pipe_tasks package of the LSST Data Management Stack.

Usage
-----

To run the example, do::

	source $LSST_HOME/loadLSST.sh
	setup pipe_tasks
	setup obs_sdss
	./bin/demo.sh  (or: ./bin/demo_small.sh  if local memory is constrained)

where $LSST_HOME is the directory where your LSST DM stack resides.

Look at the contents of demo.sh to get an understanding of how to run
processCcd scripts.

All outputs (calibrated images, FITS tables of detected sources, etc.) will be
stored in the ./output subdirectory.  These are "raw" outputs, readable by
other parts of the LSST pipeline. 

In detected-sources.txt, you'll find an ASCII whitespace separated list of
detected sources and their measured attributes.  This may be more useful for
post-processing purposes.  This file can be compared to
detected-sources.txt.expected -- their contents should be identical.  

If you ran demo_small.sh then the corresponding comparison file is named: 
detected-sources.txt.expected_small.

Included Data
-------------

The package comes with raw data for run 4192 camcol 4 field 300 and run 6377
camcol 4 field 399 from SDSS stripe 82.  This is 10 frames (one in each of five
filters for the two fields).

input
  This directory contains the fpC files with calibrated pixels, fpM files with
  masks, and asTrans/tsField/psField calibration data.

astrometry_net_data
  Astrometric and photometric reference catalog for astrometry.net, pared down
  to the area required for the above fields.  This catalog is used only for
  estimating photometric zeropoints; the astrometry is not re-determined.

Changelog
---------
* 2012/08/30, ktl@slac.stanford.edu: created the initial dataset and updated
  the scripts.

* 2013/02/21, robyn@lsst.org: reduced number of filters used in order to work around a hard limit in LSST buildbot virtual machines for (Mem + Swap) = 8Gb.

* 2013/04/11, robyn@lsst.org: replaced output variables: aperturecorrection and aperturecorrection.err with correctfluxes.apcor and correctfluxes.apcor.flags;
updated the sample output files.

* 2013/06/07, robyn@lsst.org: removed multishapelet output variables since their configuration and use is no longer defined in the default configuration.

* 2013/06/11, robyn@lsst.org: updated benchmark files.

